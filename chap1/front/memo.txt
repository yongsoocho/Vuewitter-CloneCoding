1. nuxt 는 'pages 폴더'를 자동으로 페이지 컴포넌트로 인식한다

2. index => '/' , profile = '/profile' . signup = '/signup' 으로 연결

3. '/user/yongsoo' 로 이동하고 싶을 때 => pages폴더/user폴더/yongsoo.vue

4. DX = Developer eXperience 는 nuxt 가 next(react) 보다는 한수위

5. vue 는 하나의 페이지에 렌더링, But nuxt 는 코드스플릿팅(?) ..진짜로 페이지 렌더링

6. vue 는 깜박임 없이 페이지 넘어감, nuxt 는 깜박임이 있음 

7. 코드스플릿팅은 깜박임 없이 넘어갈 수 있도록 함 => UX 

8. layouts 에 중복 컴포넌트를 관리 => nuxt 는 폴더이름으로 인식 (default.vue 는 기본 레이아웃으로 인식)

9. nuxt 에서 vue 에 추가한 것들에는 layout, head(){} => {nuxt.config 에서 head 를 설정하여 전역설정}

10. npm i vuetify @nuxtjs/vuetify 를 설치했다
10-1. @nuxtjs/vuetify => 외부 라이브러리 연결 방법이 도특하다
10-2. import from , vue.use() 방법은 중복이 너무많이 생긴다

11. nuxt.config[modules] 로 vuetify 연결 => nuxt.config[vuetify] 로 설정
11-1. modules 와 plugins 로 내부적으로 import from, vue.use 등을 알아서 처리 

12. magnify 를 쓰기위해서는 mdi-magnify 형식으로 씀

13. 실무에서는 @ ~ 같은 절대경로를 많이 쓴다 절대경로를 익힐 것!

14. v-image 와 img 의 차이는 vuetify 에서 커스텀을 더 할 수 있다는 것 밖에 없다

15. sign.vue 페이지에 있는 <v-form v-model="valid"> 는 vuetify 제공 기능이다

16. Rules 는 vuetify 에서 제공하는 기능! data(){return{ rules:[ 조건함수 || 에러메세지 ] }} 꼴이다

17. ref="form" 과 this.$refs.form.validate() 도 vuetify 에서 제공하는 기능 공식문서 참조

18. Rules 가 없으면 체크해야 할 것이 없으니 valid 가 항상 true => rules 가 모두 통과시 valid = true 되는 시스템인듯?

19. 팀 개발에서는 eslint 가 필수적이다 eslint 는 시작전에 세팅을 하고함 **/* === 모든폴더/모든파일

20. vuex store 은 사용자 정보따로, 게시글 정보따로.. 등 하기 위하여 new Vuex.Store({ }) 구식형태를 쓰지 않는다
20-1. export const state = () => { } , export const mutations = { } 형태를 쓰고 있다

21. .nuxt 폴더는 자동으로 컴파일된 결과물들임 git 에도 빼고 올리는게 좋다 용량이 크다

22. store 에는 vuex 를 관리하는 파일이 들어간다 nuxt 가 store로 인식하므로 주의 !

23. store 에서 index 는 기본 파일이 되고 post 나 user 는 모듈이 된다

24. 레이아웃 에서 접근 할때  this.$store.state.user.name 으로 접근했다 

25. mutations 에 접근 할때 this.$store.commit('모퓰명/mutation명') 로 접근했다

26. state 는 함수 mutation 은 객체 data(){  } 와 methods{ } 로 생각 하면될듯!

27. mutations 는 비동기 작업이 있으면 안된다!

28. 비동기 작업을 위해 actions 가 생겼다

29. actions 의 context 에는 	commit(mutations 실행), dispatch(actions 실행), state, rootState, getter.. 등등 많다 console.log(context) 해보자..

30. store 관련 정보는 computed 에서 불러온다?

31. dispatch 는 promise 기 때문에 then catch 가능!

32. commit 의 3번째 인자로 { root:true } 시 actions 에서 index.js mutations 호출 가능

33. 